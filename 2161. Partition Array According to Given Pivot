class Solution {
    public int[] pivotArray(int[] nums, int pivot) {
        ArrayList<Integer> l = new ArrayList<>();
        ArrayList<Integer> l1 = new ArrayList<>();
        ArrayList<Integer> l2 = new ArrayList<>();
        ArrayList<Integer> l3 = new ArrayList<>();
        int n = nums.length;
           for (int i = 0; i < nums.length; i++) {
            if(nums[i]<pivot){
                l.add(nums[i]);
            }
            if(nums[i]==pivot){
                l2.add(nums[i]);
            }
            else if(nums[i]>pivot)  {
                l1.add(nums[i]);
            }

        }
          for (Integer v: l) {
            l3.add(v);

        }
        for (Integer v: l2) {
            l3.add(v);

        }
        for (Integer v: l1) {
            l3.add(v);

        }
        int[] arr = l3.stream().mapToInt(i -> i).toArray();
       return arr;

        
    }
}
